#!/bin/bash

set -x pipefail
set -e

export PATH="/srv/scratch/sbf-pipelines/proteinfold/bin/:${PATH}"

module load java/11 nextflow/23.10.1

# Check if the input is an amino acid sequence or a path
user_input="<%= context.samplesheet %>"
echo "${user_input}" >> $HOME/debug.txt

OUT_DIR="/srv/scratch/${USER}/proteinfold/$(date -R)-<%= context.prot_mode %>"
mkdir -p "${OUT_DIR}"

MODE=""
[[ "${user_input}" =~ ^[A-Z\*\-]*$ ]] && MODE="MANUAL_INPUT"
[[ "${user_input}" =~ ^.*\.csv$ ]] && MODE="SAMPLESHEET_INPUT"
[[ "${MODE}" == "" ]] && MODE="DIRECTORY"

echo "${MODE}"

create-samplesheet --version
SAMPLESHEET="" 

if [ "${MODE}" == "MANUAL_INPUT" ];
then
	create-samplesheet --aa-string "${user_input}" --suffix "<%= context.prot_mode %>"
	SAMPLESHEET="$(pwd)/samplesheet.csv"
fi

if [ "${MODE}" == "SAMPLESHEET_INPUT" ];
then
	SAMPLESHEET="${user_input}"
fi

if [ "${MODE}" == "DIRECTORY" ];
then
	create-samplesheet --directory "${user_input}" --suffix "<%= context.prot_mode %>"
	SAMPLESHEET="$(pwd)/samplesheet.csv"
fi

PROT_MODE=""
ARGS=""

[[ "<%= context.af_method %>" == "af2" ]] && PROT_MODE="alphafold2" && ARGS="--alphafold2_db /mnt/af2 --alphafold2_mode split_msa_prediction --full_dbs true --alphafold2_model_preset <%= context.prot_mode %> --use_gpu true"
[[ "<%= context.af_method %>" == "cf" ]] && PROT_MODE="colabfold"
[[ "<%= context.af_method %>" == "esmf" ]] && PROT_MODE="esmfold"

cd /srv/scratch/sbf-pipelines/proteinfold/pipeline

export SINGULARITY_CACHE_DIR="/srv/scratch/sbf-pipelines/proteinfold/singualrity"

module load cuda/12.2.1

nextflow run main.nf \
	--input "${SAMPLESHEET}" \
	--outdir "${OUT_DIR}" \
	--mode "${PROT_MODE}" \
	${ARGS} \
	-profile singularity

exit 0
